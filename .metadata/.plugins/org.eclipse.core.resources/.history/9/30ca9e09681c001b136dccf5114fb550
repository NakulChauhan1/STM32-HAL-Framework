/*
 * Write a application, which uses basic timer to generate interrupt for every 100 ms. Toggle the GPIO or LED inside
 * the Timer IRQ handler and verify using logic analyzer.
 *
 * */


#include "main.h"

void SystemClockConfig();

int main ()
{

	//first API to be called in order to use STMCube HAL LAyer
	//it does HL initializations and LL initializations of processor
	HAL_Init();

	//clock configurations for the Application
	SystemClockConfig();

	//HLL initializations and LL initializations of peripheral


	return 0;
}




void SystemClockConfig()
{

}













/*
 * 1. Processor Initializations
 * 2. System Clock Configurations
 * 3. Peripheral Initializations
 * 	  High Level Inits (done in UART2_Init() ) + Low Level Inits ( done in msp.c)
 *
 *
 * Processor Initializations: ( done in HAL_Inits() )
 * - High Level Inits
 * - Low Level Inits (call is made by HAL_Init() to HAL_MspInit() in msp.c to do this task)
 *
 *
 * Peripheral Initializations:
 * - High Level Inits   ( done in UART2_Init () )
 * - Low Level Inits	(call is made by HAL_UART_Init() to HAL_UART_MspInit() in msp.c to do this task)
 *
 * */
