/*
 * WAP to send characters over UART to MCU. MCU should convert all the the lower case letters in to uppercase and send it back to the user
 * Using below parameter settings:
 * BaudRate = 115200
 * No of data bits = 8
 * Stop Bits = 1
 * Parity = None
 * NO UART Hardware flow control
 * Use UART2 peripheral of the MCU in Asynchronous mode (ie UART mode)
 *
 * */


#include "stm32f4xx_hal.h"
#include "main.h"

void SystemClockConfig();
void UART2_Init ();
void Error_Handler ();

int main()
{
	//first API to be called in order to use STMCube HAL LAyer
	HAL_Init();

	//not present in Cube HAL, this  is application specific, by default system clock will be running internal RC oscillator, but to change it this function is used
	SystemClockConfig();

	//High Level initialisation of peripheral
	UART2_Init ();

	return 0;
}

void SystemClockConfig()
{
	//this application does not require system clock configurations
}

void UART2_Init ()
{
		GPIO_InitTypeDef gpio;
		gpio.Mode = GPIO_MODE_AF_OD;
		gpio.Pin = GPIO_PIN_0;
		gpio.Pull = GPIO_NOPULL;
		gpio.Speed = GPIO_SPEED_FREQ_MEDIUM;
		gpio.Alternate = GPIO_AF7_USART2;


		HAL_GPIO_Init ( GPIOA,  &gpio );

		UART_HandleTypeDef uart2;
		uart2.Instance = USART2;
		uart2.Init.BaudRate = 115200;
		uart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
		uart2.Init.Mode = UART_MODE_RX;
		uart2.Init.OverSampling = UART_OVERSAMPLING_8;
		uart2.Init.Parity = UART_PARITY_NONE;
		uart2.Init.StopBits = UART_STOPBITS_1;
		uart2.Init.WordLength = UART_WORDLENGTH_8B;

		if ( HAL_UART_Init ( &uart2 ) != HAL_OK )
		{
			//something went worng
			Error_Handler ();
		}
		UART_MspInit();														//low level intializarions of UART2
}

void Error_Handler ()
{
	//we can give warning here like blinking red led
	while(1);
}




/*
 * 1. Processor Initializations
 * 2. System Clock Configurations
 * 3. Peripheral Initializations
 * 	  High Level Inits (done in UART2_Init() ) + Low Level Inits ( done in msp.c)
 *
 *
 * Processor Initializations: ( done in HAL_Inits() )
 * - High Level Inits
 * - Low Level Inits (call is made to function in msp.c to do this task)
 *
 *
 * Peripheral Initializations:
 * - High Level Inits   ( done in UART2_Init () )
 * - Low Level Inits
 *
 * */
